name: Testing-CI/CD

on:
 push:
   branches:
     - test-branch

env:
 DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
 DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
 Build-Deploy:
   runs-on: ubuntu-latest

   steps:
     - name: Checkout
       uses: actions/checkout@v2


     - name: Set up Docker CLI
       uses: docker/setup-buildx-action@v1


     - name: Login to Docker Hub
       run: |
         echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin


     - name: Retrieve Latest Docker Tag
       id: latest_tag
       run: |
         DOCKER_ACCESS_TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"${{ secrets.DOCKER_USERNAME }}\", \"password\": \"${{ secrets.DOCKER_PASSWORD }}\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
         latest_tag=$(curl -s -H "Authorization: Bearer $DOCKER_ACCESS_TOKEN" https://registry.hub.docker.com/v2/repositories/$DOCKER_USERNAME/$DOCKER_REPO/tags | jq -r '[.results | .[] | select(.name | test("^v[0-9]+$")) | .name | ltrimstr("v") | tonumber] | max')
         if [ "$latest_tag" = "null" ]; then
          latest_tag=0
         fi
         echo "Latest tag: v$latest_tag"
         echo "::set-output name=latest_tag::v$latest_tag"


     - name: Increment Version Number
       id: increment_version
       run: |
         latest_tag=${{ steps.latest_tag.outputs.latest_tag }}
         number=$(echo "$latest_tag" | grep -oE '[0-9]+$')
         if [ -z "$number" ]; then
          number=0
         fi
         new_number=$((number + 1))
         new_version="v$new_number"
         echo "New version: $new_version"
         echo "::set-output name=new_version::$new_version"


     - name: Create Logs Directory
       run: |
         mkdir -p logs/fgv-logger
         cd logs/fgv-logger
         touch access.log error.log
    
     - name: Build Docker Image
       run: docker build -t $DOCKER_USERNAME/$DOCKER_REPO:${{ steps.increment_version.outputs.new_version }} .


     - name: Push Docker Image
       run: docker push $DOCKER_USERNAME/$DOCKER_REPO:${{ steps.increment_version.outputs.new_version }}
